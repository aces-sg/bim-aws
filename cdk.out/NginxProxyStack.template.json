{
 "Resources": {
  "NginxVpcFE1B165E": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/Resource"
   }
  },
  "NginxVpcPublicSubnet1SubnetFD3CAA71": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet1/Subnet"
   }
  },
  "NginxVpcPublicSubnet1RouteTableDE29045F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet1/RouteTable"
   }
  },
  "NginxVpcPublicSubnet1RouteTableAssociation8988997E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NginxVpcPublicSubnet1RouteTableDE29045F"
    },
    "SubnetId": {
     "Ref": "NginxVpcPublicSubnet1SubnetFD3CAA71"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "NginxVpcPublicSubnet1DefaultRoute8E2C4B50": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "NginxVpcPublicSubnet1RouteTableDE29045F"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "NginxVpcIGW5BF51E51"
    }
   },
   "DependsOn": [
    "NginxVpcVPCGWA22A08F1"
   ],
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "NginxVpcPublicSubnet2Subnet070965F9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet2/Subnet"
   }
  },
  "NginxVpcPublicSubnet2RouteTableD2BFAC61": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet2/RouteTable"
   }
  },
  "NginxVpcPublicSubnet2RouteTableAssociationE6BE9BCB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NginxVpcPublicSubnet2RouteTableD2BFAC61"
    },
    "SubnetId": {
     "Ref": "NginxVpcPublicSubnet2Subnet070965F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "NginxVpcPublicSubnet2DefaultRouteFFF221F2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "NginxVpcPublicSubnet2RouteTableD2BFAC61"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "NginxVpcIGW5BF51E51"
    }
   },
   "DependsOn": [
    "NginxVpcVPCGWA22A08F1"
   ],
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "NginxVpcIsolatedSubnet1Subnet9CA57C33": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/IsolatedSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IsolatedSubnet1/Subnet"
   }
  },
  "NginxVpcIsolatedSubnet1RouteTable7BA216E2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/IsolatedSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IsolatedSubnet1/RouteTable"
   }
  },
  "NginxVpcIsolatedSubnet1RouteTableAssociationB974B368": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NginxVpcIsolatedSubnet1RouteTable7BA216E2"
    },
    "SubnetId": {
     "Ref": "NginxVpcIsolatedSubnet1Subnet9CA57C33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IsolatedSubnet1/RouteTableAssociation"
   }
  },
  "NginxVpcIsolatedSubnet2SubnetB99DDB07": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/IsolatedSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IsolatedSubnet2/Subnet"
   }
  },
  "NginxVpcIsolatedSubnet2RouteTable5365FB87": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc/IsolatedSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IsolatedSubnet2/RouteTable"
   }
  },
  "NginxVpcIsolatedSubnet2RouteTableAssociationD8F91B56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NginxVpcIsolatedSubnet2RouteTable5365FB87"
    },
    "SubnetId": {
     "Ref": "NginxVpcIsolatedSubnet2SubnetB99DDB07"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IsolatedSubnet2/RouteTableAssociation"
   }
  },
  "NginxVpcIGW5BF51E51": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/IGW"
   }
  },
  "NginxVpcVPCGWA22A08F1": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    },
    "InternetGatewayId": {
     "Ref": "NginxVpcIGW5BF51E51"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxVpc/VPCGW"
   }
  },
  "AlbSecurityGroup86A59E99": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for ALB",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/AlbSecurityGroup/Resource"
   }
  },
  "NginxSecurityGroupFD5E8C12": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Nginx instance",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "Description": "Allow HTTP traffic from ALB",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "AlbSecurityGroup86A59E99",
        "GroupId"
       ]
      },
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxSecurityGroup/Resource"
   }
  },
  "NginxAlb10923154": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AlbSecurityGroup86A59E99",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "NginxVpcPublicSubnet1SubnetFD3CAA71"
     },
     {
      "Ref": "NginxVpcPublicSubnet2Subnet070965F9"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "NginxVpcPublicSubnet1DefaultRoute8E2C4B50",
    "NginxVpcPublicSubnet1RouteTableAssociation8988997E",
    "NginxVpcPublicSubnet2DefaultRouteFFF221F2",
    "NginxVpcPublicSubnet2RouteTableAssociationE6BE9BCB"
   ],
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxAlb/Resource"
   }
  },
  "NginxAlbHttpListener568EB36E": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "NginxTargetGroup6C5FCDE3"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "NginxAlb10923154"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxAlb/HttpListener/Resource"
   }
  },
  "NginxTargetGroup6C5FCDE3": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/",
    "Matcher": {
     "HttpCode": "200-399"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "Targets": [
     {
      "Id": {
       "Ref": "NginxInstance1675945E77560d183f7de7d0"
      }
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Ref": "NginxVpcFE1B165E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxTargetGroup/Resource"
   }
  },
  "NginxInstanceInstanceRole65BF5669": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxInstance"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxInstance/InstanceRole/Resource"
   }
  },
  "NginxInstanceInstanceProfile9F91A2EA": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "NginxInstanceInstanceRole65BF5669"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxInstance/InstanceProfile"
   }
  },
  "NginxInstance1675945E77560d183f7de7d0": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "NginxInstanceInstanceProfile9F91A2EA"
    },
    "ImageId": "ami-0672fd5b9210aa093",
    "InstanceType": "t2.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "NginxSecurityGroupFD5E8C12",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "NginxVpcPublicSubnet1SubnetFD3CAA71"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NginxProxyStack/NginxInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo apt-get update -y\nsudo apt-get install -y nginx\nsudo bash -c 'cat > /etc/nginx/sites-available/default <<EOF\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    server_name _;\n\n    # For the main website\n    location / {\n        proxy_pass https://www.bim.com.sg;\n        proxy_set_header Host www.bim.com.sg;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_ssl_server_name on;\n    }\n\n    # For Next.js static files in jobs section\n    location /_next/ {\n        proxy_pass https://jobs.bimeco.io/_next/;\n        proxy_set_header Host jobs.bimeco.io;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_ssl_server_name on;\n    }\n\n    # For the jobs section\n    location /career {\n        # Rewrite /jobs to /career\n        proxy_pass https://jobs.bimeco.io;\n        proxy_set_header Host jobs.bimeco.io;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_ssl_server_name on;\n\n        proxy_redirect https://jobs.bimeco.io/career/ /jobs/;\n\n        proxy_connect_timeout 60s;\n        proxy_read_timeout 60s;\n    }\n\n    # error handling\n    error_page 404 /404.html;\n    error_page 500 502 503 504 /50x.html;\n    location = /50x.html {\n        root /usr/share/nginx/html;\n    }\n}\n\nEOF'\nsudo nginx -t\nsudo systemctl restart nginx\nsudo systemctl enable nginx"
    }
   },
   "DependsOn": [
    "NginxInstanceInstanceRole65BF5669"
   ],
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/NginxInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRwW6DMAz9lt1D1lY77Mp6qCpVGoKq1ykEt3MbEpQ4VBXi35cSGPTk52fHfs/Z8I81X72Ju0tkdUsUlrwrSMgbC9RPB3LDu1Mj2fasT9mWZb5UKAtfaqAnN6PceIKjKBXM/MylzhmJgtDo/2aWWWwFwTxjrwlswLvA3sVjXDpmKQVZvzVoYgVIb5EeO2t8M6x7IfbakdAS4siIewZKOEKpjKhKoQKH+tIGd2nTBEuDtEOofQ01sM/HL/myDx2BHnsmvKgfhb0EF5O6RdozFDXvchPPNMVJZWbNGRX0PcvBGW+jh29PjY9HHtmeaVMBv7r3dv3JV+EDrw4xsV4T1sDzGP8Af5GzwNwBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "NginxProxyStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "LoadBalancerDNS": {
   "Description": "DNS name of the load balancer",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "NginxAlb10923154",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}